{"version":3,"sources":["components/AddCategory.js","helpers/GetGrifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputText","setInputText","onSubmit","e","preventDefault","trim","length","cats","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","search","encodeURI","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAEhCC,EAFgC,KAErBC,EAFqB,KAkBvC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAUK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAa,MAKjB,SACI,uBACIO,MAAUR,EACVS,SAlBkB,SAACN,GAC3BF,EAAaE,EAAEO,OAAOF,aAuB9BX,EAAYc,UAAY,CACpBb,cAAec,IAAUC,KAAKC,YAGnBjB,Q,+BCjCFkB,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,4DACH,mCACVC,EAASC,UAAUH,GACnBI,EAHa,iDAGmCF,EAHnC,6BACH,oCADG,SAIAG,MAAOD,GAJP,cAIbE,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAXvB,kBAcZK,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAChC,OACI,sBAAKa,UAAU,OAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,kCAAMA,EAAN,WCDCO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACfjB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAiBzC,OAXAC,qBAAU,WACLzB,EAASC,GACJyB,MAAM,SAAAC,GAAI,OACPC,YAAa,WACTJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MACR,UAEnB,CAAErB,IAEEsB,EDb4BM,CAAc5B,GAAlCc,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,qCACI,mCAAOrB,EAAP,OACEqB,GAAW,2CACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEKA,GADCA,EAAIC,aESnBiB,EAtBM,WAAO,IAAD,EAEa9C,mBAAS,CAAC,cAFvB,mBAEhB+C,EAFgB,KAEJhD,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQgD,EAAWpB,KAAI,SAAAV,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCZ9B+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.03eaffef.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputText, setInputText] = useState('')\r\n    \r\n    const handleInputTextChange = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputText.trim().length > 2 ){\r\n\r\n            setCategories( cats => [inputText, ...cats]);\r\n            setInputText('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                value = { inputText }\r\n                onChange = { handleInputTextChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const api_key = 'UM94LJDCMUMrs5o1Cno1aGiXcRzmIqSG'\r\n    const search = encodeURI(category);\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${search}&limit=10&api_key=${api_key}`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n        \r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n            { loading && <p>Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem \r\n                        key={ img.id } \r\n                        { ...img } />\r\n                        ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/GetGrifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   const [state, setState] = useState({\r\n       data: [],\r\n       loading: true\r\n   })\r\n\r\n   useEffect(() => {\r\n        getGifs( category )\r\n            .then( imgs => \r\n                setTimeout(  () => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })}, 3000)\r\n                 );\r\n   }, [ category ])\r\n\r\n   return state;\r\n}\r\n","import  { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={ category } />\r\n                        ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}